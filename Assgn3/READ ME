Please make sure you provide the correct input file name and parameters before executing the program

Capacity of link and the weights for the queues are hardcoded in the code

Departure times were calculated using GPS. And for implementing WFQ we start with the
first packet and and look for the packet with least departure time among all the available 
packets to be transmitted at the end of each transmission.


input1:	#input in the question

1;0.2;1000;1
2;0.4;1500;2
3;0.92;1000;4
4;2.1;1500;4
5;3.4;1000;3
6;5.1;1000;2

output1:

*** Departure times of packets using GPS ***

[2.6700000000000004, 5.623809523809525, 6.107142857142858, 6.117142857142858, 6.420238095238094, 7.198333333333332]


*** Order of departure of packets using GPS ***
[3, 2, 4, 1, 5, 6]


*** Departure times of packets using WFQ ***
[1.2, 2.7, 4.2, 5.7, 6.7, 8.2]


*** Order of departure of packets using WFQ ***
[1, 3, 2, 4, 5, 6]


input2:	#example discussed in class, 3 queues and Cap = 1

1;1;1;1
2;1;1;2
3;1;1;3
4;1;1;1
5;1;5;1
6;6;1;2

output2:

*** Departure times of packets using GPS ***

[2.666666666666667, 4.333333333333334, 6.000000000000001, 6.000000000000001, 10.000000000000002, 11.000000000000002]


*** Order of departure of packets using GPS ***
[1, 4, 2, 3, 6, 5]


*** Departure times of packets using WFQ ***
[2.0, 3.0, 4.0, 5.0, 6.0, 7.0]


*** Order of departure of packets using WFQ ***
[1, 4, 2, 3, 5, 6]
